#
# Trigger all tests (including promotion tests) on any pull request.
#
# Dependency graph:
# promote (to the production server)
#  . publish (to the candidates server)
#    . test on each platform x editor version
#       . pack (see below)
#    . promotion tests on one fixed platform
#       . pack (see below)
# pack
#  . build on each platform
#
# The tests are triggered on every push to a pull request branch.
# That means build and package are run on those events as well.
#
# Publish and promote must be run manually.
#
# On windows and mac, the full build gets run but we only grab the binaries.
# The basic packages are set up on linux.
#
# Note that I have the platforms listed up top and a list of platforms below
# and they repeat, because variable definitions can't use variables. If you
# change one, change both! (Hopefully yamato handles this soon)
#
{% metadata_file .yamato/global.metafile %}
---

build_win:
  name: Build on win
  agent:
    type: {{ win_platform.type }}
    image: {{ win_platform.image }}
    flavor: {{ win_platform.flavor}}
  commands:
    - build_win.cmd
  artifacts:
    build:
      paths:
        - "build-win/install/**"

build_mac:
  name: Build on mac
  agent:
    type: {{ mac_platform.type }}
    image: {{ mac_platform.image }}
    flavor: {{ mac_platform.flavor}}
  variables:
    HOMEBREW_NO_INSTALL_CLEANUP: "1"
  commands:
    - ./build_mac.sh
  artifacts:
    build:
      paths:
        - "build-mac/install/**"

build_ubuntu:
  name: Build on ubuntu
  agent:
    type: {{ ubuntu_platform.type }}
    image: {{ ubuntu_platform.image }}
    flavor: {{ ubuntu_platform.flavor}}
  commands:
    - ./build_linux.sh
  artifacts:
    build:
      paths:
        - "build-ubuntu/install/**"

pack:
  name: Pack
  agent:
    type: {{ ubuntu_platform.type }}
    image: {{ ubuntu_platform.image }}
    flavor: {{ ubuntu_platform.flavor }}
  commands:
    - mv -v build-ubuntu/install/* .
    - cp -vrfp build-mac/install/* .
    - cp -vrfp build-win/install/* .
    - npm install -g upm-ci-utils@stable --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package pack --package-path com.autodesk.fbx
  dependencies:
    - .yamato/yamato.yml#build_win
    - .yamato/yamato.yml#build_mac
    - .yamato/yamato.yml#build_ubuntu
  artifacts:
    build:
      paths:
        - "build-ubuntu/install/**"
        - "build-mac/install/**"
        - "build-win/install/**"
    packages:
      paths:
        - "upm-ci~/packages/**"
    build_output:
      paths:
        - "com.autodesk.fbx/**"

# Job to generate documentation for the package
generate_documentation:
  name : Generate documentation
  agent:
    type: {{ mac_platform.type }}
    image: {{ mac_platform.image }}
    flavor: {{ mac_platform.flavor }}
  commands:
    - brick_source: git@github.cds.internal.unity3d.com:wind-xu/virtual_production_doc_generation.git@v0.3.0
      variables:
        EDITOR_VERSION: {{ editors.last.version }}
        PACKAGE_NAME: com.autodesk.fbx
        PACKAGE_PATH: com.autodesk.fbx
        #Set to false because some file links such as api/index.html don't exist in local Documentation folder and will cause warnings. They only exist in generated documentation.
        WARNINGS_AS_ERRORS: false
  dependencies:
    - .yamato/yamato.yml#pack

{% for editor in editors %}
{% for platform in platforms %}
test_{{ platform.name }}_{{ editor.version }}:
  name : Test version {{ editor.version }} on {{ platform.name }}
  agent:
    type: {{ platform.type }}
{% if platform.model %}
    model: {{ platform.model }}
{% endif %}
    image: {{ platform.image }}
    flavor: {{ platform.flavor}}
{% if platform.name == "ubuntu" %}
  variables:
    DISPLAY: ":0"
{% endif %}
  commands:
    - npm install -g upm-ci-utils@stable --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
{% if platform.name == "ubuntu" %}
    # clang required for il2cpp backend
    - sudo apt-get -y install clang
{% endif %}
# So when the platform is Silicon Mac or ARM64 Windows, we need to explicitly download ARM64 vesion editor.
{% if platform.model == "M1" or platform.model == "arm" %}
    - unity-downloader-cli -u {{ editor.version }} -a arm64 -c Editor --wait --published-only
    # Setting backend to il2cpp to ensure il2cpp is installed and can be used by editor tests (see Note above).
    - upm-ci package test --backend il2cpp --unity-version .Editor --package-path com.autodesk.fbx --enable-code-coverage --extra-utr-arg=--coverage-pkg-version=1.2.2 --code-coverage-options 'generateHtmlReport;assemblyFilters:+Autodesk.Fbx'
{% else %}
    - upm-ci package test --backend il2cpp --unity-version {{ editor.version }} --package-path com.autodesk.fbx --enable-code-coverage --extra-utr-arg=--coverage-pkg-version=1.2.2 --code-coverage-options 'generateHtmlReport;assemblyFilters:+Autodesk.Fbx'
{% endif %}
    - python tests/Yamato/check_coverage_percent.py upm-ci~/test-results/ {{ coverage.minPercent }}
    - echo "****** PASSED *******"
  artifacts:
    packages:
      paths:
        - "upm-ci~/packages/**"
    logs:
      paths:
        - "upm-ci~/test-results/**/*"
  dependencies:
    - .yamato/yamato.yml#pack
{% endfor %}
{% endfor %}

# PR trigger for doc only changes, it will run generate_documentation job.
test_trigger_pr_documentation:
  name: Pull Request Tests Trigger for documentation changes
  triggers:
    cancel_old_ci: true
    expression: pull_request.(source match ".*" AND push.changes.any match "com.autodesk.fbx/Documentation~/**" AND NOT draft)
  dependencies:
    - .yamato/yamato.yml#generate_documentation

# PR trigger
test_trigger_pr:
  name: Pull Request Tests Trigger
  triggers:
    cancel_old_ci: true
    expression: pull_request.(source match ".*" AND NOT push.changes.all match ["com.autodesk.fbx/Documentation~/**", "**/*.md"] AND NOT draft)
  dependencies:
    - .yamato/yamato.yml#pack
{% for editor in editors %}
{% for platform in platforms %}
# Only run tests in trunk if on Silicon Mac or ARM64 Windows. On other platforms, run tests in all Editor versions.
{% if editor.version == "trunk" or platform.model != "M1" and platform.model != "arm" %}
    - .yamato/yamato.yml#test_{{ platform.name }}_{{ editor.version }}
{% endif %}
{% endfor %}
{% endfor %}

# Weekly trigger
weekly_trigger:
  name: Weekly trigger
  triggers:
    recurring:
      - branch: master
        frequency: weekly
        rerun: always
  dependencies:
    - .yamato/yamato.yml#test_trigger_pr


promotion_test:
  name : Promotion Test with {{ promote_platform.version }} on {{ promote_platform.name }}
  agent:
    type: {{ promote_platform.type }}
    image: {{ promote_platform.image }}
    flavor: {{ promote_platform.flavor}}
  variables:
    UPMCI_PROMOTION: 1
  commands:
    - npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package test --backend il2cpp --unity-version {{ promote_platform.version }} --package-path com.autodesk.fbx
  artifacts:
    logs:
      paths:
        - "upm-ci~/test-results/**/*"
    packages:
      paths:
        - "upm-ci~/packages/**"
  dependencies:
    - .yamato/yamato.yml#pack

publish:
  name: Publish to Internal Registry
  agent:
    type: {{ win_platform.type }}
    image: {{ win_platform.image }}
    flavor: {{ win_platform.flavor }}
  variables:
    UPMCI_ENABLE_PACKAGE_SIGNING: 1
  commands:
    - dir /A 
    - dir /A com.autodesk.fbx
    - npm install upm-ci-utils@latest -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package publish --package-path com.autodesk.fbx
  artifacts:
    packages:
      paths:
        - "upm-ci~/packages/**"
  dependencies:
    - .yamato/yamato.yml#pack
    - .yamato/yamato.yml#test_trigger_pr

publish_dry_run:
  name: Publish to Internal Registry (Dry Run)
  agent:
    type: {{ win_platform.type }}
    image: {{ win_platform.image }}
    flavor: {{ win_platform.flavor }}
  variables:
    UPMCI_ENABLE_PACKAGE_SIGNING: 1
  commands:
    - dir /A 
    - dir /A com.autodesk.fbx
    - npm install upm-ci-utils@latest -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package publish --package-path com.autodesk.fbx --dry-run
  artifacts:
    packages:
      paths:
        - "upm-ci~/packages/**"
  dependencies:
    - .yamato/yamato.yml#pack
    - .yamato/yamato.yml#test_trigger_pr

promote:
  name: Promote to Production
  agent:
    type: {{ promote_platform.type }}
    image: {{ promote_platform.image }}
    flavor: {{ promote_platform.flavor }}
  variables:
    UPMCI_PROMOTION: 1
  commands:
    - npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package promote --package-path com.autodesk.fbx
  artifacts:
    packages:
      paths:
        - "upm-ci~/packages/**"
  dependencies:
    - .yamato/yamato.yml#promotion_test
    - .yamato/yamato.yml#pack
    - .yamato/yamato.yml#publish
