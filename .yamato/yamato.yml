#
# Trigger all tests (including promotion tests) on any pull request.
#
# Dependency graph:
# promote (to the production server)
#  . publish (to the candidates server)
#    . test on each platform x editor version
#       . pack (see below)
#    . promotion tests on one fixed platform
#       . pack (see below)
# pack
#  . build on each platform
#
# The tests are triggered on every push to a pull request branch.
# That means build and package are run on those events as well.
#
# Publish and promote must be run manually.
#
# On windows and mac, the full build gets run but we only grab the binaries.
# The basic packages are set up on linux.
#
# Note that I have the platforms listed up top and a list of platforms below
# and they repeat, because variable definitions can't use variables. If you
# change one, change both! (Hopefully yamato handles this soon)
#
{% metadata_file .yamato/global.metafile %}
---

build_win:
  name: Build on win
  agent:
    type: {{ win_platform.type }}
    image: {{ win_platform.image }}
    flavor: {{ win_platform.flavor}}
  commands:
    - choco -v -y install 7zip
    - python build.py --stevedore --verbose --clean --yamato
    - ren build build-win
  artifacts:
    build:
      paths:
        - "build-win/install/**"

build_mac:
  name: Build on mac
  agent:
    type: {{ mac_platform.type }}
    image: {{ mac_platform.image }}
    flavor: {{ mac_platform.flavor}}
  variables:
    HOMEBREW_NO_INSTALL_CLEANUP: "1"
  commands:
    # We need to install p7zip and mono.
    # Mono needs to install Python 3.9 and pip.
    # Pip needs to set PIP_INDEX_URL, but brew clears the environment when it
    # elevates privileges. So we need to set it via pip config.
    - pip config set global.index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple
    - brew list p7zip || brew install p7zip
    - cmake --version || brew install cmake
    - python ./build.py --stevedore --verbose --clean --yamato
    - mv build build-mac
  artifacts:
    build:
      paths:
        - "build-mac/install/**"

build_ubuntu:
  name: Build on ubuntu
  agent:
    type: {{ ubuntu_platform.type }}
    image: {{ ubuntu_platform.image }}
    flavor: {{ ubuntu_platform.flavor}}
  commands:
    # FBX SDK 2020.2 requires gcc 9.3
    - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
    - sudo apt-get update
    - sudo apt-get -y install cmake
    - sudo apt-get install libxml2-dev
    - sudo apt-get -y install gcc-9 g++-9
    - sudo apt-get install p7zip mono-devel
    # Ensure correct version of gcc and g++ used
    # https://stackoverflow.com/questions/17275348/how-to-specify-new-gcc-path-for-cmake
    - CC=`which gcc-9` CXX=`which g++-9` python ./build.py --stevedore --verbose --clean --yamato
    - mv build build-ubuntu
  artifacts:
    build:
      paths:
        - "build-ubuntu/install/**"

pack:
  name: Pack
  agent:
    type: Unity::VM
    image: package-ci/ubuntu:stable
    flavor: b1.small
  commands:
    - mv -v build-ubuntu/install/* .
    - cp -vrfp build-mac/install/* .
    - cp -vrfp build-win/install/* .
    - npm install -g upm-ci-utils@stable --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package pack --package-path com.autodesk.fbx
  dependencies:
    - .yamato/yamato.yml#build_win
    - .yamato/yamato.yml#build_mac
    - .yamato/yamato.yml#build_ubuntu
  artifacts:
    build:
      paths:
        - "build-ubuntu/install/**"
        - "build-mac/install/**"
        - "build-win/install/**"
    packages:
      paths:
        - "upm-ci~/packages/**"
    build_output:
      paths:
        - "com.autodesk.fbx/**"

{% for editor in editors %}
{% for platform in platforms %}
test_{{ platform.name }}_{{ editor.version }}:
  name : Test version {{ editor.version }} on {{ platform.name }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor}}
{% if platform.name == "ubuntu" %}
  variables:
    DISPLAY: ":0"
{% endif %}
  commands:
    - npm install -g upm-ci-utils@stable --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
{% if platform.name == "ubuntu" %}
    # FBX SDK 2020.2 requires gcc 9.3
    - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
    - sudo apt-get update
    - sudo apt-get -y install --only-upgrade libstdc++6  
{% endif %} 
{% if editor.version == 2018.4 and platform.name == "ubuntu" %}
    # There is no IL2CPP on Ubuntu before 2019.3
    - upm-ci package test --backend mono --unity-version {{ editor.version }} --package-path com.autodesk.fbx
{% elseif editor.version == 2018.4 %}
    # Setting backend to il2cpp to ensure il2cpp is installed.
    # Note: setting backend to il2cpp will still run the tests with mono by default 
    #       (would need to add --platform standalone to run playmode tests with il2cpp),
    #       however this installs il2cpp so that the editor build tests can change the backend as necessary.
    - upm-ci package test --backend il2cpp --unity-version {{ editor.version }} --package-path com.autodesk.fbx
{% else %}
    {% if platform.name == "ubuntu" %}
    # clang required for il2cpp backend
    - sudo apt-get -y install clang
    {% endif %}
    # Code coverage is only available in Unity 2019.3 and higher.
    # Setting backend to il2cpp to ensure il2cpp is installed and can be used by editor tests (see Note above).
    - upm-ci package test --backend il2cpp --unity-version {{ editor.version }} --package-path com.autodesk.fbx --enable-code-coverage --extra-utr-arg=--coverage-pkg-version=1.2.2 --code-coverage-options 'generateHtmlReport;assemblyFilters:+Autodesk.Fbx'
{% if platform.name != "ubuntu" %}
    # Tests are temporarily disabled on linux (FBX-100)
    - python tests/Yamato/check_coverage_percent.py upm-ci~/test-results/ {{ coverage.minPercent }}
{% endif %}
{% endif %}
    - echo "****** PASSED *******"
  artifacts:
    packages:
      paths:
        - "upm-ci~/packages/**"
    logs:
      paths:
        - "upm-ci~/test-results/**/*"
  dependencies:
    - .yamato/yamato.yml#pack
{% endfor %}
{% endfor %}

# PR trigger
test_trigger_pr:
  name: Pull Request Tests Trigger
  triggers:
    cancel_old_ci: true
    expression: pull_request.(source match ".*" AND NOT draft)
  dependencies:
    - .yamato/yamato.yml#pack
{% for editor in editors %}
{% for platform in platforms %}
    - .yamato/yamato.yml#test_{{ platform.name }}_{{ editor.version }}
{% endfor %}
{% endfor %}

# Weekly trigger
weekly_trigger:
  name: Weekly trigger
  triggers:
    recurring:
      - branch: master
        frequency: weekly
        rerun: always
  dependencies:
    - .yamato/yamato.yml#test_trigger_pr


promotion_test:
  name : Promotion Test with {{ promote_platform.version }} on {{ promote_platform.name }}
  agent:
    type: {{ promote_platform.type }}
    image: {{ promote_platform.image }}
    flavor: {{ promote_platform.flavor}}
  variables:
    UPMCI_PROMOTION: 1
  commands:
    - npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package test --backend il2cpp --unity-version {{ promote_platform.version }} --package-path com.autodesk.fbx
  triggers:
    pull_requests:
      - targets:
          only:
            - "master"
  artifacts:
    logs:
      paths:
        - "upm-ci~/test-results/**/*"
    packages:
      paths:
        - "upm-ci~/packages/**"
  dependencies:
    - .yamato/yamato.yml#pack

publish:
  name: Publish to Internal Registry
  agent:
    type: {{ publish_platform.type }}
    image: {{ publish_platform.image }}
    flavor: {{ publish_platform.flavor}}
  variables:
    UPMCI_ENABLE_PACKAGE_SIGNING: 1
  commands:
    - dir /A 
    - dir /A com.autodesk.fbx
    - npm install upm-ci-utils@latest -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package publish --package-path com.autodesk.fbx
  artifacts:
    packages:
      paths:
        - "upm-ci~/packages/**"
  dependencies:
    - .yamato/yamato.yml#pack
    - .yamato/yamato.yml#test_trigger_pr

promote:
  name: Promote to Production
  agent:
    type: {{ win_platform.type }}
    image: {{ win_platform.image }}
    flavor: b1.small
  variables:
    UPMCI_PROMOTION: 1
  commands:
    - npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package promote --package-path com.autodesk.fbx
  artifacts:
    packages:
      paths:
        - "upm-ci~/packages/**"
  dependencies:
    - .yamato/yamato.yml#promotion_test
    - .yamato/yamato.yml#pack
    - .yamato/yamato.yml#publish
